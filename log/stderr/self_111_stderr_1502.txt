mkdir: cannot create directory ‘./backup/self_111’: File exists
cp: cannot create regular file './backup/self_111/trainer.py': Permission denied
cp: cannot create regular file './backup/self_111/kitti_dataset.py': Permission denied
cp: cannot create regular file './backup/self_111/mono_dataset.py': Permission denied
cp: cannot create regular file './backup/self_111/denseclneck.py': Permission denied
cp: cannot create regular file './backup/self_111/depth_decoder.py': Permission denied
cp: cannot create regular file './backup/self_111/pose_cnn.py': Permission denied
cp: cannot create regular file './backup/self_111/pose_decoder.py': Permission denied
cp: cannot create regular file './backup/self_111/resnet_encoder.py': Permission denied
/home/cilab4/anaconda3/envs/ODI/lib/python3.8/site-packages/torchvision/transforms/transforms.py:287: UserWarning: Argument interpolation should be of type InterpolationMode instead of int. Please, use InterpolationMode enum.
  warnings.warn(
/home/cilab4/anaconda3/envs/ODI/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/home/cilab4/anaconda3/envs/ODI/lib/python3.8/site-packages/torch/nn/functional.py:4003: UserWarning: Default grid_sample and affine_grid behavior has changed to align_corners=False since 1.3.0. Please specify align_corners=True if the old behavior is desired. See the documentation of grid_sample for details.
  warnings.warn(
Traceback (most recent call last):
  File "train.py", line 46, in <module>
    trainer.train()
  File "/mnt/server4_hard1/heeseon/monodepth2/trainer.py", line 227, in train
    self.run_epoch()
  File "/mnt/server4_hard1/heeseon/monodepth2/trainer.py", line 260, in run_epoch
    total_loss = losses["loss"] + losses["loss_ssl"] + losses["kd_loss"] + losses["l_sp"]
KeyError: 'loss_ssl'
